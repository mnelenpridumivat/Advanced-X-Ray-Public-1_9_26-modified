#include "pch_script.h"
#include <dinput.h>
#include "key_binding_registrator.h"
#include "xr_level_controller.h"

using namespace luabind;

int dik_to_bind(int dik){
	return get_binded_action(dik);
}

#pragma optimize("s",on)
void key_binding_registrator::script_register(lua_State *L)
{
	module(L)
	[
		def("dik_to_bind",		&dik_to_bind),

		class_<enum_exporter<EGameActions> >("key_bindings")
			.enum_("commands")
			[
				value("kFWD",						static_cast<int>(kFWD)),
				value("kBACK",						static_cast<int>(kBACK)),
				value("kL_STRAFE",					static_cast<int>(kL_STRAFE)),
				value("kR_STRAFE",					static_cast<int>(kR_STRAFE)),
				value("kL_LOOKOUT",					static_cast<int>(kL_LOOKOUT)),
				value("kR_LOOKOUT",					static_cast<int>(kR_LOOKOUT)),
				value("kLEFT",						static_cast<int>(kLEFT)),
				value("kRIGHT",						static_cast<int>(kRIGHT)),
				value("kUP",						static_cast<int>(kUP)),
				value("kDOWN",						static_cast<int>(kDOWN)),
				value("kJUMP",						static_cast<int>(kJUMP)),
				value("kCROUCH",					static_cast<int>(kCROUCH)),
				value("kACCEL",						static_cast<int>(kACCEL)),
				value("kCAM_1",						static_cast<int>(kCAM_1)),
				value("kCAM_2",						static_cast<int>(kCAM_2)),
				value("kCAM_3",						static_cast<int>(kCAM_3)),
				value("kCAM_ZOOM_IN",				static_cast<int>(kCAM_ZOOM_IN)),
				value("kCAM_ZOOM_OUT",				static_cast<int>(kCAM_ZOOM_OUT)),
				value("kTORCH",						static_cast<int>(kTORCH)),
				value("kNIGHT_VISION",				static_cast<int>(kNIGHT_VISION)),
				value("kWPN_1",						static_cast<int>(kWPN_1)),
				value("kWPN_2",						static_cast<int>(kWPN_2)),
				value("kWPN_3",						static_cast<int>(kWPN_3)),
				value("kWPN_4",						static_cast<int>(kWPN_4)),
				value("kWPN_5",						static_cast<int>(kWPN_5)),
				value("kWPN_6",						static_cast<int>(kWPN_6)),
				value("kWPN_7",						static_cast<int>(kWPN_7)),
				value("kWPN_NEXT",					static_cast<int>(kWPN_NEXT)),
				value("kWPN_FIRE",					static_cast<int>(kWPN_FIRE)),
				value("kWPN_RELOAD",				static_cast<int>(kWPN_RELOAD)),
				value("kWPN_ZOOM",					static_cast<int>(kWPN_ZOOM)),
				value("kWPN_FUNC",					static_cast<int>(kWPN_FUNC)),
				value("kUSE",						static_cast<int>(kUSE)),
				value("kDROP",						static_cast<int>(kDROP)),
				value("kSCORES",					static_cast<int>(kSCORES)),
				value("kCHAT",						static_cast<int>(kCHAT)),
				value("kSCREENSHOT",				static_cast<int>(kSCREENSHOT)),
				value("kQUIT",						static_cast<int>(kQUIT)),
				value("kCONSOLE",					static_cast<int>(kCONSOLE)),
				value("kINVENTORY",					static_cast<int>(kINVENTORY)),
				value("kBUY",						static_cast<int>(kBUY)),
				value("kSKIN",						static_cast<int>(kSKIN)),
				value("kTEAM",						static_cast<int>(kTEAM))
			],
		class_<key_binding_registrator >("DIK_keys")
			.enum_("dik_keys")
			[
				value("DIK_ESCAPE",						static_cast<int>(DIK_ESCAPE)),
				value("DIK_2",							static_cast<int>(DIK_2)),
				value("DIK_4",							static_cast<int>(DIK_4)),
				value("DIK_6",							static_cast<int>(DIK_6)),
				value("DIK_8",							static_cast<int>(DIK_8)),
				value("DIK_0",							static_cast<int>(DIK_0)),
				value("DIK_EQUALS",						static_cast<int>(DIK_EQUALS)),
				value("DIK_TAB",						static_cast<int>(DIK_TAB)),
				value("DIK_W",							static_cast<int>(DIK_W)),
				value("DIK_R",							static_cast<int>(DIK_R)),
				value("DIK_Y",							static_cast<int>(DIK_Y)),
				value("DIK_I",							static_cast<int>(DIK_I)),
				value("DIK_P",							static_cast<int>(DIK_P)),
				value("DIK_RBRACKET",					static_cast<int>(DIK_RBRACKET)),
				value("DIK_LCONTROL",					static_cast<int>(DIK_LCONTROL)),
				value("DIK_S",							static_cast<int>(DIK_S)),
				value("DIK_F",							static_cast<int>(DIK_F)),
				value("DIK_H",							static_cast<int>(DIK_H)),
				value("DIK_K",							static_cast<int>(DIK_K)),
				value("DIK_SEMICOLON",					static_cast<int>(DIK_SEMICOLON)),
				value("DIK_GRAVE",						static_cast<int>(DIK_GRAVE)),
				value("DIK_BACKSLASH",					static_cast<int>(DIK_BACKSLASH)),
				value("DIK_X",							static_cast<int>(DIK_X)),
				value("DIK_V",							static_cast<int>(DIK_V)),
				value("DIK_N",							static_cast<int>(DIK_N)),
				value("DIK_COMMA",						static_cast<int>(DIK_COMMA)),
				value("DIK_SLASH",						static_cast<int>(DIK_SLASH)),
				value("DIK_MULTIPLY",					static_cast<int>(DIK_MULTIPLY)),
				value("DIK_SPACE",						static_cast<int>(DIK_SPACE)),
				value("DIK_F1",							static_cast<int>(DIK_F1)),
				value("DIK_F3",							static_cast<int>(DIK_F3)),
				value("DIK_F5",							static_cast<int>(DIK_F5)),
				value("DIK_F7",							static_cast<int>(DIK_F7)),
				value("DIK_F9",							static_cast<int>(DIK_F9)),
				value("DIK_NUMLOCK",					static_cast<int>(DIK_NUMLOCK)),
				value("DIK_NUMPAD7",					static_cast<int>(DIK_NUMPAD7)),
				value("DIK_NUMPAD9",					static_cast<int>(DIK_NUMPAD9)),
				value("DIK_NUMPAD4",					static_cast<int>(DIK_NUMPAD4)),
				value("DIK_NUMPAD6",					static_cast<int>(DIK_NUMPAD6)),
				value("DIK_NUMPAD1",					static_cast<int>(DIK_NUMPAD1)),
				value("DIK_NUMPAD3",					static_cast<int>(DIK_NUMPAD3)),
				value("DIK_DECIMAL",					static_cast<int>(DIK_DECIMAL)),
				value("DIK_F12",						static_cast<int>(DIK_F12)),
				value("DIK_F14",						static_cast<int>(DIK_F14)),
				value("DIK_KANA",						static_cast<int>(DIK_KANA)),
				value("DIK_NOCONVERT",					static_cast<int>(DIK_NOCONVERT)),
				value("DIK_NUMPADEQUALS",				static_cast<int>(DIK_NUMPADEQUALS)),
				value("DIK_AT",							static_cast<int>(DIK_AT)),
				value("DIK_UNDERLINE",					static_cast<int>(DIK_UNDERLINE)),
				value("DIK_STOP",						static_cast<int>(DIK_STOP)),
				value("DIK_UNLABELED",					static_cast<int>(DIK_UNLABELED)),
				value("DIK_RCONTROL",					static_cast<int>(DIK_RCONTROL)),
				value("DIK_DIVIDE",						static_cast<int>(DIK_DIVIDE)),
				value("DIK_RMENU",						static_cast<int>(DIK_RMENU)),
				value("DIK_UP",							static_cast<int>(DIK_UP)),
				value("DIK_LEFT",						static_cast<int>(DIK_LEFT)),
				value("DIK_END",						static_cast<int>(DIK_END)),
				value("DIK_NEXT",						static_cast<int>(DIK_NEXT)),
				value("DIK_DELETE",						static_cast<int>(DIK_DELETE)),
				value("DIK_RWIN",						static_cast<int>(DIK_RWIN)),
				value("DIK_PAUSE",						static_cast<int>(DIK_PAUSE)),
				value("DIK_1",							static_cast<int>(DIK_1)),
				value("DIK_3",							static_cast<int>(DIK_3)),
				value("DIK_5",							static_cast<int>(DIK_5)),
				value("DIK_7",							static_cast<int>(DIK_7)),
				value("DIK_9",							static_cast<int>(DIK_9)),
				value("DIK_MINUS",						static_cast<int>(DIK_MINUS)),
				value("DIK_BACK",						static_cast<int>(DIK_BACK)),
				value("DIK_Q",							static_cast<int>(DIK_Q)),
				value("DIK_E",							static_cast<int>(DIK_E)),
				value("DIK_T",							static_cast<int>(DIK_T)),
				value("DIK_U",							static_cast<int>(DIK_U)),
				value("DIK_O",							static_cast<int>(DIK_O)),
				value("DIK_LBRACKET",					static_cast<int>(DIK_LBRACKET)),
				value("DIK_RETURN",						static_cast<int>(DIK_RETURN)),
				value("DIK_A",							static_cast<int>(DIK_A)),
				value("DIK_D",							static_cast<int>(DIK_D)),
				value("DIK_G",							static_cast<int>(DIK_G)),
				value("DIK_J",							static_cast<int>(DIK_J)),
				value("DIK_L",							static_cast<int>(DIK_L)),
				value("DIK_APOSTROPHE",					static_cast<int>(DIK_APOSTROPHE)),
				value("DIK_LSHIFT",						static_cast<int>(DIK_LSHIFT)),
				value("DIK_Z",							static_cast<int>(DIK_Z)),
				value("DIK_C",							static_cast<int>(DIK_C)),
				value("DIK_B",							static_cast<int>(DIK_B)),
				value("DIK_M",							static_cast<int>(DIK_M)),
				value("DIK_PERIOD",						static_cast<int>(DIK_PERIOD)),
				value("DIK_RSHIFT",						static_cast<int>(DIK_RSHIFT)),
				value("DIK_LMENU",						static_cast<int>(DIK_LMENU)),
				value("DIK_CAPITAL",					static_cast<int>(DIK_CAPITAL)),
				value("DIK_F2",							static_cast<int>(DIK_F2)),
				value("DIK_F4",							static_cast<int>(DIK_F4)),
				value("DIK_F6",							static_cast<int>(DIK_F6)),
				value("DIK_F8",							static_cast<int>(DIK_F8)),
				value("DIK_F10",						static_cast<int>(DIK_F10)),
				value("DIK_SCROLL",						static_cast<int>(DIK_SCROLL)),
				value("DIK_NUMPAD8",					static_cast<int>(DIK_NUMPAD8)),
				value("DIK_SUBTRACT",					static_cast<int>(DIK_SUBTRACT)),
				value("DIK_NUMPAD5",					static_cast<int>(DIK_NUMPAD5)),
				value("DIK_ADD",						static_cast<int>(DIK_ADD)),
				value("DIK_NUMPAD2",					static_cast<int>(DIK_NUMPAD2)),
				value("DIK_NUMPAD0",					static_cast<int>(DIK_NUMPAD0)),
				value("DIK_F11",						static_cast<int>(DIK_F11)),
				value("DIK_F13",						static_cast<int>(DIK_F13)),
				value("DIK_F15",						static_cast<int>(DIK_F15)),
				value("DIK_CONVERT",					static_cast<int>(DIK_CONVERT)),
				value("DIK_YEN",						static_cast<int>(DIK_YEN)),
				value("DIK_CIRCUMFLEX",					static_cast<int>(DIK_CIRCUMFLEX)),
				value("DIK_COLON",						static_cast<int>(DIK_COLON)),
				value("DIK_KANJI",						static_cast<int>(DIK_KANJI)),
				value("DIK_AX",							static_cast<int>(DIK_AX)),
				value("DIK_NUMPADENTER",				static_cast<int>(DIK_NUMPADENTER)),
				value("DIK_NUMPADCOMMA",				static_cast<int>(DIK_NUMPADCOMMA)),
				value("DIK_SYSRQ",						static_cast<int>(DIK_SYSRQ)),
				value("DIK_HOME",						static_cast<int>(DIK_HOME)),
				value("DIK_PRIOR",						static_cast<int>(DIK_PRIOR)),
				value("DIK_RIGHT",						static_cast<int>(DIK_RIGHT)),
				value("DIK_DOWN",						static_cast<int>(DIK_DOWN)),
				value("DIK_INSERT",						static_cast<int>(DIK_INSERT)),
				value("DIK_LWIN",						static_cast<int>(DIK_LWIN)),
				value("DIK_APPS",						static_cast<int>(DIK_APPS)),
				value("MOUSE_1",						static_cast<int>(MOUSE_1)),
				value("MOUSE_2",						static_cast<int>(MOUSE_2)),
				value("MOUSE_3",						static_cast<int>(MOUSE_3)),
				value("MOUSE_4",						static_cast<int>(MOUSE_4)),
				value("MOUSE_5",						static_cast<int>(MOUSE_5)),
				value("DIK_RETURN",						static_cast<int>(DIK_RETURN)),
				value("DIK_NUMPADENTER",				static_cast<int>(DIK_NUMPADENTER))
				
			]
	];
}

SCRIPT_EXPORT1(key_binding_registrator);
